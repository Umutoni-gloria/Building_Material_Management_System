/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import model.Supplier;
import java.awt.GridLayout;
import java.io.File;
import java.io.FileWriter;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import service.SupplierService;

/**
 *
 * @author user2
 */
public class SupplierForm extends javax.swing.JFrame {
    private SupplierService supplierService;
    private String userRole;

    /**
     * Creates new form SupplierForm
     */
    public SupplierForm(String userRole) throws RemoteException {
        this.userRole = userRole;
        initComponents();
         try{
        
         Registry registry = LocateRegistry.getRegistry("localhost", 6000);
        supplierService = (SupplierService) registry.lookup("supplier");
        } catch(Exception ex){
            ex.printStackTrace();
        }
        setTitle("Supplier Management");
        setLocationRelativeTo(null);
        if (!"Admin".equalsIgnoreCase(userRole)) {
        insert.setVisible(false); // Hide ADD button for employees
    }
        loadSupplierData();
    }
    
     private void loadSupplierData() throws RemoteException {
        
        List<Supplier> suppliers = supplierService.findAll();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (Supplier supplier : suppliers) {
            model.addRow(new Object[]{
                supplier.getSupplier_id(),
                supplier.getName(),
                supplier.getEmail(),
                supplier.getAddress()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Nametxt = new javax.swing.JTextField();
        Emailtxt = new javax.swing.JTextField();
        Addresstxt = new javax.swing.JTextField();
        insert = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Display = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        download = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                        SUPPLIER MANAGEMENT");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Names");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Emails");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Address");

        insert.setBackground(new java.awt.Color(255, 255, 0));
        insert.setFont(new java.awt.Font("Tahoma", 3, 16)); // NOI18N
        insert.setForeground(new java.awt.Color(153, 153, 0));
        insert.setText("ADD");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Supplier Id", "Names", "Emails", "Address"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        Back.setBackground(new java.awt.Color(255, 255, 0));
        Back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Back.setForeground(new java.awt.Color(102, 102, 0));
        Back.setText("BACK TO DASHBOARD");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Addresstxt, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addComponent(Emailtxt, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Nametxt, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(172, 172, 172))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Emailtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Addresstxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(insert)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(Back)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        Display.setBackground(new java.awt.Color(255, 255, 0));
        Display.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Display.setForeground(new java.awt.Color(153, 153, 0));
        Display.setText("Display");
        Display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(255, 255, 0));
        Delete.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Delete.setForeground(new java.awt.Color(153, 153, 0));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Search.setBackground(new java.awt.Color(255, 255, 0));
        Search.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Search.setForeground(new java.awt.Color(153, 153, 0));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Update.setBackground(new java.awt.Color(255, 255, 0));
        Update.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Update.setForeground(new java.awt.Color(153, 153, 0));
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        logoutButton.setBackground(new java.awt.Color(255, 255, 0));
        logoutButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        logoutButton.setForeground(new java.awt.Color(153, 153, 0));
        logoutButton.setText("LOGOUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        download.setBackground(new java.awt.Color(255, 255, 0));
        download.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        download.setForeground(new java.awt.Color(153, 153, 0));
        download.setText("Download");
        download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(download)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Update)
                        .addComponent(Search)
                        .addComponent(Delete)
                        .addComponent(Display)
                        .addComponent(logoutButton)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(Display)
                .addGap(48, 48, 48)
                .addComponent(Delete)
                .addGap(47, 47, 47)
                .addComponent(Search)
                .addGap(61, 61, 61)
                .addComponent(Update)
                .addGap(47, 47, 47)
                .addComponent(download)
                .addGap(45, 45, 45)
                .addComponent(logoutButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        Supplier supplier = new Supplier();

    // ✅ VALIDATION FIRST
    if (Nametxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Name is required!");
        return;
    }
    if (!Emailtxt.getText().matches("^.+@.+\\..+$")) {
        JOptionPane.showMessageDialog(this, "Please enter a valid email!");
        return;
    }
    if (Addresstxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Address is required!");
        return;
    }
    

    // ✅ Ask for confirmation
    int confirm = JOptionPane.showConfirmDialog(
        this,
        "Are you sure you want to register this supplier?",
        "Confirm Insertion",
        JOptionPane.OK_CANCEL_OPTION
    );

    if (confirm == JOptionPane.OK_OPTION) {
        // ✅ Only continue if user clicks OK
        try {
            supplier.setName(Nametxt.getText().trim());
            supplier.setEmail(Emailtxt.getText().trim());
            supplier.setAddress(Addresstxt.getText().trim());

      
            int result = supplierService.addSupplier(supplier);

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "✅ Supplier Registered Successfully!");
                loadSupplierData(); // refresh JTable

                // ✅ Clear the form after success
                Nametxt.setText("");
                Emailtxt.setText("");
                Addresstxt.setText("");
                Nametxt.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "❌ Failed to register supplier.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Supplier ID must be a number.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        // ✅ If user clicks CANCEL, show cancelled info
        JOptionPane.showMessageDialog(this, "Insertion cancelled by user.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_insertActionPerformed

    private void DisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
 
    String input = JOptionPane.showInputDialog(this, "Enter Supplier Id  to Delete:");
    
    if (input == null || input.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Supplier id cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    int supplier_id;
try{
     supplier_id = Integer.parseInt(input);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid numeric ID!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
}

    // Step 2: Find taxpayer (same as delete)
    Supplier suppliersObj = new Supplier();
    suppliersObj.setSupplier_id(supplier_id);
        try {
            suppliersObj= supplierService.searchSupplier(supplier_id);
        } catch (RemoteException ex) {
            Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    if (suppliersObj != null) {
        // Step 3: Show current info (modified from delete)
        String message = "CURRENT Supplier INFO\n" +
                       "---------------------\n" +
                       "Supplier_Id : " + suppliersObj.getSupplier_id() + "\n" +
                       "Name   : "      + suppliersObj.getName() + "\n" +
                       "Email : "       + suppliersObj.getEmail() + "\n" +
                       "Address: "      + suppliersObj.getAddress();
        
           int confirm = JOptionPane.showConfirmDialog(this, message, "Confirm Deletion", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Step 5: Proceed with deletion
        int rowAffected = 0;
            try {
                rowAffected = supplierService.deleteSupplier(suppliersObj);
            } catch (RemoteException ex) {
                Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        if (rowAffected > 0) {
            JOptionPane.showMessageDialog(this, "Data Deleted Successfully!");
            try {
                loadSupplierData();  // Refresh table
            } catch (RemoteException ex) {
                Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Data Not Deleted!!");
        }
    }
} else {
    JOptionPane.showMessageDialog(this, "Supplier Information Not Found!");
}
    }//GEN-LAST:event_DeleteActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
     

// Step 1: Ask for material_id
String input = JOptionPane.showInputDialog(this, "Enter Supplier  Id to Search:");

if (input == null || input.trim().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Supplier Id cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Step 2: Initialize and set material_id
int supplier_id;
try{
     supplier_id = Integer.parseInt(input);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid numeric ID!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
}
Supplier suppliersObj = new Supplier();
suppliersObj.setSupplier_id(supplier_id);

        try {
            // Step 3: Find the material by material_id
            suppliersObj = supplierService.searchSupplier(supplier_id);
        } catch (RemoteException ex) {
            Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
        }

if (suppliersObj != null) {
    // Step 4: Display material details for confirmation
   // Step 3: Show current info (modified from delete)
        String message = "CURRENT Supplier INFO\n" +
                       "---------------------\n" +
                       "Supplier_Id : " + suppliersObj.getSupplier_id() + "\n" +
                       "Name   : "      + suppliersObj.getName() + "\n" +
                       "Email : "       + suppliersObj.getEmail() + "\n" +
                       "Address: "      + suppliersObj.getAddress();
                      
         int confirm = JOptionPane.showConfirmDialog(
            this, 
            new Object[] { message }, 
            "Update Supplier", 
            JOptionPane.OK_CANCEL_OPTION
                 
        );
            }
else{
        JOptionPane.showMessageDialog(this, "supplier Information Not Found!");
}
    }//GEN-LAST:event_SearchActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
       
    String input = JOptionPane.showInputDialog(this, "Enter Supplier Id  to Update:");
    
    if (input == null || input.trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Supplier id cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    int supplier_id;
try{
     supplier_id = Integer.parseInt(input);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid numeric ID!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
}

    // Step 2: Find taxpayer (same as delete)
    Supplier suppliersObj = new Supplier();
    suppliersObj.setSupplier_id(supplier_id);
        try {
            suppliersObj= supplierService.searchSupplier(supplier_id);
        } catch (RemoteException ex) {
            Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    if (suppliersObj != null) {
        // Step 3: Show current info (modified from delete)
        String message = "CURRENT Materials INFO\n" +
                       "---------------------\n" +
                       "Supplier_Id : " + suppliersObj.getSupplier_id() + "\n" +
                       "Name   : "      + suppliersObj.getName() + "\n" +
                       "Email : "       + suppliersObj.getEmail() + "\n" +
                       "Address: "      + suppliersObj.getAddress();
        
        // Step 4: Create input dialog for new values
        JPanel panel = new JPanel(new GridLayout(4, 2));        
        panel.add(new JLabel("New Name:"));
        JTextField nameField = new JTextField(suppliersObj.getName());
        panel.add(nameField);
        
        panel.add(new JLabel("New Email:"));
        JTextField emailField = new JTextField(suppliersObj.getEmail());
        panel.add(emailField);
        
        panel.add(new JLabel("New Address:"));
        JTextField addressField = new JTextField(suppliersObj.getAddress());
        panel.add(addressField);
        
      

        int confirm = JOptionPane.showConfirmDialog(
            this, 
            new Object[] { message, panel }, 
            "Update Supplier", 
            JOptionPane.OK_CANCEL_OPTION
        );

        if (confirm == JOptionPane.OK_OPTION) {
            // Step 5: Update record
            suppliersObj.setName(nameField.getText());
            suppliersObj.setEmail(emailField.getText());
            suppliersObj.setAddress(addressField.getText());
            
            
            try {
                
                int rowAffected = supplierService.updateSupplier(suppliersObj);
                
                if (rowAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Update Successful!");
                    loadSupplierData(); // Refresh table
                } else {
                    JOptionPane.showMessageDialog(this, "Update Failed!");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Amount Format!", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (RemoteException ex) {
                Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Supplier Not Found!");
    }
    }//GEN-LAST:event_UpdateActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
                        if (userRole.equalsIgnoreCase("Admin")) {
        new AdminDashboardForm().setVisible(true);
    } else if (userRole.equalsIgnoreCase("Employee")) {
        new EmployeeDashboardForm().setVisible(true);
    }
    dispose();
    }//GEN-LAST:event_BackActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
            String[] options = {"Logout", "Exit", "Cancel"};
    int choice = JOptionPane.showOptionDialog(
        this,
        "What would you like to do?",
        "Confirm",
        JOptionPane.YES_NO_CANCEL_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,
        options,
        options[0]
    );

    switch (choice) {
        case 0: // Logout
            if ("Admin".equalsIgnoreCase(userRole)) {
                new AdminDashboardForm().setVisible(true);
            } else {
                new EmployeeDashboardForm().setVisible(true);
            }
            this.dispose();
            break;

        case 1: // Exit
            System.exit(0);
            break;

        case 2: // Cancel
        default:
            // do nothing
            break;
    }
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadActionPerformed
        // TODO add your handling code here:
JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Save Report As");

    int userSelection = fileChooser.showSaveDialog(this);

    if (userSelection == JFileChooser.APPROVE_OPTION) {
        try {
            File fileToSave = fileChooser.getSelectedFile();
            FileWriter fw = new FileWriter(fileToSave + ".txt");

            // === HEADER ===
            fw.write("\t*** Building Material Management System Report ***\n");
            fw.write("\tDate: " + java.time.LocalDate.now() + "\n\n");
            
            // === TABLE HEADER ===
            for (int i = 0; i < jTable1.getColumnCount(); i++) {
                fw.write(String.format("%-20s", jTable1.getColumnName(i)));
            }
            fw.write("\n");
            fw.write("--------------------------------------------------------------------------------------\n");

            // === TABLE DATA ===
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                for (int j = 0; j < jTable1.getColumnCount(); j++) {
                    Object cell = jTable1.getValueAt(i, j);
                    fw.write(String.format("%-20s", cell == null ? "N/A" : cell.toString()));
                }
                fw.write("\n");
            }

            fw.write("\nReport generated successfully ✅\n");
            fw.close();
            JOptionPane.showMessageDialog(this, "✅ Report downloaded successfully!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "❌ Error downloading report: " + ex.getMessage());
        }
    }
    }//GEN-LAST:event_downloadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
                   try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (Exception ex) {
        java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

    java.awt.EventQueue.invokeLater(() -> {
            try {
                new SupplierForm("Admin").setVisible(true); // Or "Employee"
            } catch (RemoteException ex) {
                Logger.getLogger(SupplierForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    });
   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Addresstxt;
    private javax.swing.JButton Back;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Display;
    private javax.swing.JTextField Emailtxt;
    private javax.swing.JTextField Nametxt;
    private javax.swing.JButton Search;
    private javax.swing.JButton Update;
    private javax.swing.JButton download;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutButton;
    // End of variables declaration//GEN-END:variables
}
